# File: configuration.yaml

object:
  name: "obj_000020"

target_images:
  generate: true
  output_directory: "target_images"
  num_images: 1

paths:
  log_directory: "logs"
  mesh: "./3d_models/obj_000020.ply"
  target_image: "./target_images/obj_000020/target_1.png"
  models_directory: "./3d_models"
  object_name: "obj_000020"

origin:
  x: 0.0
  y: 0.0
  z: 0.0

logging:
  level: "debug" # error, critical, warn, info, debug, trace
  pattern: "[%Y-%m-%d %H:%M:%S.%e] [%^%l%$] [%n] [%t] [%s:%#] [%!] %v"

camera:
  width: 640              # Image width in pixels
  height: 480             # Image height in pixels
  fov_x: 0.95             # Field of view in degrees along x-axis
  fov_y: 0.75             # Field of view in degrees along y-axis
  focal_length:
    x: 1000.0           # Focal length along x-axis in pixels
    y: 1000.0           # Focal length along y-axis in pixels
  principal_point:
    x: 0.5              # Principal point x-coordinate (normalized)
    y: 0.5              # Principal point y-coordinate (normalized)

image:
  preprocess: false
  feature:
    extractor:
      type: "SIFT"                    # Feature extractor type (AKAZE, ORB, SIFT)
    matcher:
      type: "FLANN"                   # Feature matcher type (FLANN, BF)
      flann:
        ratio_thresh: 0.8             # Ratio threshold for Loweâ€™s ratio test
        min_good_matches: 5           # Minimum number of good matches required
      bf:
        norm_type: 4                  # Norm type (NORM_L2 = 4, NORM_HAMMING = 6)
        cross_check: false            # Cross-check for matching

  comparator:
    type: "COMPOSITE"                        # Selected image comparison method (FEATURE, SSIM, COMPOSITE, PSNR)
    normalize: false                    # Normalize the images before comparison (using MSE/PSNR which are absolute metrics)
    ssim:
      threshold: 1.0                   # Higher is better
    feature:
      threshold: 0.85                   # Higher is better
    psnr:
      threshold: 0.25                   # Higher is better
    composite:
      threshold: 0.95                   # Higher is better

optimization:
  target_score: 0.90 # Target score for optimization
  significant_improvement_threshold: 0.20 # local search when improvement is greater than this
  refinement_threshold: 0.70 # Refinement threshold to switch to local search
  max_restarts: 0 # Maximum number of restarts (0 = no restarts)
  max_points: 70 # Maximum number of points to optimize (0 = no limit) TODO: Implement
  patience: 15 # Number of allowed stagnant iterations before stopping the optimization
  improvement_threshold: 1e-5 # DEFAULT: 1e-4; improvement less than this will be considered stagnant
  gp:
    kernel:
      matern:
        initial_length_scale_multiplier: 0.5
        initial_variance: 1.0
        initial_noise_variance: 1e-6
      hyperparameters:
        length_scale: 0.5
        variance: 1.0
        noise_variance: 1e-6
        optimization:
          frequency: 10
          max_iterations: 10
          convergence_tolerance: 1e-5
          restarts: 5
          param_lower_bound: 1e-6
          param_upper_bound: 1e3
    acquisition: # ADAPTIVE =  adaptive exploration-exploitation + EI + PI + UCB
      # ADAPTIVE_{strategy} = adaptive exploration-exploitation + {strategy} - other strategies are set to 0
      strategy: ADAPTIVE              # DEFAULT: ADAPTIVE; EI, PI, UCB, UCB_ALT, ADAPTIVE, ADAPTIVE_EI, ADAPTIVE_PI, ADAPTIVE_UCB
      distance_penalty: false           # DEFAULT: false; Penalize large distances in the acquisition function
      beta: 2.0                       # DEFAULT: 2.0; Exploration-exploitation trade-off parameter
      exploration_weight: 5.0         # DEFAULT: 1.0; Exploration weight for the acquisition function
      exploitation_weight: 1.0        # DEFAULT: 1.0; Exploitation weight for the acquisition function
      momentum: 0.75                   # DEFAULT: 0.1; Momentum for the acquisition function
      distance_weight: 0.50           # DEFAULT: 0.5; Weight for the distance term in the acquisition function
      threshold: 0.75                 # DEFAULT: 0.75; Threshold until which few actual evaluations are done

  local_search:
    frequency: 10 # Frequency of local search (every n steps)
    max_iterations: 2 # Maximum number of iterations for local search
    learning_rate: 0.01 # Learning rate for local search
    epsilon: 1e-4 # Epsilon for local search (high = big steps, low = small steps)
    patience: 3
    momentum: 0.85



estimation:
  distance:
    skip: true
    max_iterations: 2
    initial_guess: 2.0
    threshold: 0.05

rendering:
  duration: 0 # Duration of the rendering in ms

sampling:
  count: 10

octree:
  min_nodes_to_explore: 8
  min_size_multiplier: 0.01 # CRITICAL - DO NOT CHANGE (0.01)
  max_iterations: 20
  tolerance: 0.01
  restrict_vicinity: false # Restricts search space to the vicinity of the current best point
  vicinity_multiplier: 0.9 # Multiplier/Importance for the vicinity radius
  min_vicinity: 0.5 # Minimum vicinity radius

cache:
  evict: true
  max_size: 500
  base_radius: 0.15 # Base radius for the cache (radius within which the cache will return pre-computed results)
  score_threshold: 0.70 # pre-computed results returned with a score below this threshold (if available)

perception:
  type: simulator
